[project]
name = "valorantx-private"
requires-python = ">=3.8"

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pyright]
include = [
    "valorantx",
    "valorantx/models",
    "valorantx/types",
    "valorantx/valorant_api/models",
    "valorantx/valorant_api/types"
]
exclude = [
    "**/__pycache__",
    "build",
    "dist"
]
pythonVersion = "3.8"
typeCheckingMode = "basic"
reportUnnecessaryTypeIgnoreComment = "warning"
reportMissingParameterType = "error"
reportUnusedVariable = "warning"

[tool.ruff]
line-length = 120
target-version = "py38"
exclude = [".git", ".venv"]

[tool.ruff.lint]
preview = true
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line-too-long
    "UP031", # printf-string-formatting
]

[tool.ruff.format]
preview = true
quote-style = "single"
skip-magic-trailing-comma = false

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.pytest.ini_options]
asyncio_mode = "strict"
addopts = "-rfEsw -v"

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "if __name__ == .__main__.:",
    ]